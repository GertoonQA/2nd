from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.common.exceptions import ElementClickInterceptedException, NoAlertPresentException, UnexpectedAlertPresentException
from docx import Document
from docx.shared import Inches
from datetime import datetime
import time
import os

def setup_driver():
    options = Options()
    options.add_argument("--headless")  # –•—ç—Ä–≤—ç—ç —Ö“Ø—Å–≤—ç–ª headless-–≥ —É–Ω—Ç—Ä–∞–∞–∂ –±–æ–ª–Ω–æ
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    return webdriver.Chrome(options=options)

def create_result_folders():
    results_root = r"D:\\2nd project\\results"
    now = datetime.now().strftime("%Y%m%d_%H%M%S")
    base_folder = os.path.join(results_root, f"test_result_{now}")
    img_folder = os.path.join(base_folder, "screenshots")
    os.makedirs(img_folder, exist_ok=True)
    return base_folder, img_folder

def add_screenshot(doc, driver, img_folder, filename, description):
    try:
        path = os.path.join(img_folder, filename)
        driver.save_screenshot(path)
        doc.add_paragraph(description)
        doc.add_picture(path, width=Inches(4))
    except Exception as e:
        doc.add_paragraph(f"‚ö†Ô∏è Screenshot –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {str(e)}")

def remove_obstructive_elements(driver):
    # –ó–∞—Ä–∏–º–¥–∞–∞ click —Ö–∏–π—Ö—ç–¥ —Å–∞–∞–¥ –±–æ–ª–¥–æ–≥ –∑—É—Ä–≥—É—É–¥—ã–≥ —É—Å—Ç–≥–∞–Ω–∞
    for _ in range(10):
        removed = driver.execute_script("""
            var imgs = document.querySelectorAll('img');
            var count = imgs.length;
            imgs.forEach(function(img){ img.remove(); });
            return count;
        """)
        if removed == 0:
            break
        time.sleep(0.2)

def safe_click_by_link_text(driver, text):
    # Link text-—ç—ç—Ä click —Ö–∏–π—Ö “Ø–µ–¥ —Å–∞–∞–¥—Ç–∞–π –±–æ–ª —É—Å—Ç–≥–∞–∂ –¥–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ
    for _ in range(5):
        try:
            elem = driver.find_element(By.LINK_TEXT, text)
            if elem.is_displayed() and elem.is_enabled():
                elem.click()
                return True
        except ElementClickInterceptedException:
            print(f"Click —Ö–∏–π—Ö—ç–¥ —Å–∞–∞–¥ –±–æ–ª–ª–æ–æ, –¥–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–∂ –±–∞–π–Ω–∞: {text}")
            remove_obstructive_elements(driver)
            time.sleep(0.2)
        except Exception as e:
            print(f"Click —Ö–∏–π—Ö—ç–¥ –∞–ª–¥–∞–∞: {e}")
            time.sleep(0.2)
    return False

def handle_unexpected_alert(driver, doc=None):
    try:
        alert = driver.switch_to.alert
        alert_text = alert.text
        print("‚ö†Ô∏è Alert –∏–ª—ç—Ä–ª—ç—ç:", alert_text)
        alert.accept()
        if doc:
            doc.add_paragraph(f"‚ö†Ô∏è Alert –∏–ª—ç—Ä—Å—ç–Ω: {alert_text}")
        time.sleep(1)
        return True
    except NoAlertPresentException:
        return False

# === Main Test ===
if __name__ == "__main__":
    base_folder, img_folder = create_result_folders()
    doc = Document()
    doc.add_heading('Guru99 Bank Full Test Report', 0)

    driver = setup_driver()
    driver.get("https://demo.guru99.com/V4/")
    time.sleep(1)
    add_screenshot(doc, driver, img_folder, "01_open_browser.png", "1. Login —Ö—É—É–¥–∞—Å –Ω—ç—ç–≥–¥–ª—ç—ç.")

    print("–ù—ç–≤—Ç—Ä—ç—Ö...")
    driver.find_element(By.NAME, "uid").send_keys("mngr625959")
    driver.find_element(By.NAME, "password").send_keys("AdUryqy")
    add_screenshot(doc, driver, img_folder, "02_credentials.png", "2. Username/Password –æ—Ä—É—É–ª–∞–≤.")

    driver.find_element(By.NAME, "btnLogin").click()
    time.sleep(2)
    add_screenshot(doc, driver, img_folder, "03_dashboard.png", "3. Login —Ö–∏–π—Å–Ω–∏–π –¥–∞—Ä–∞–∞—Ö —Ö—É—É–¥–∞—Å.")

    assert "Manger Id : mngr625959" in driver.page_source
    doc.add_paragraph("4. Manger Id –∞–º–∂–∏–ª—Ç—Ç–∞–π —à–∞–ª–≥–∞–ª–∞–∞.")

    # --- Balance Enquiry ---
    print("Balance Enquiry —Ü—ç—Å —Ä“Ø“Ø –æ—Ä–∂ –±–∞–π–Ω–∞...")
    remove_obstructive_elements(driver)
    if safe_click_by_link_text(driver, "Balance Enquiry"):
        time.sleep(1)
        add_screenshot(doc, driver, img_folder, "04_balance_enquiry.png", "5. Balance Enquiry —Ü—ç—Å —Ä“Ø“Ø –æ—Ä—Å–æ–Ω –±–∞–π–¥–∞–ª.")
    else:
        print("Balance Enquiry —Ä“Ø“Ø –æ—Ä–æ—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.")

    # --- Fund Transfer ---
    print("Fund Transfer —Ü—ç—Å —Ä“Ø“Ø –æ—Ä–∂ –±–∞–π–Ω–∞...")
    try:
        if safe_click_by_link_text(driver, "Fund Transfer"):
            time.sleep(1)

            driver.find_element(By.NAME, "payersaccount").send_keys("3308")
            driver.find_element(By.NAME, "payeeaccount").send_keys("3309")
            driver.find_element(By.NAME, "ammount").send_keys("100")
            driver.find_element(By.NAME, "desc").send_keys("Test transfer")

            img5 = os.path.join(img_folder, "05_fund_transfer_form.png")
            driver.save_screenshot(img5)
            doc.add_paragraph("6. Fund Transfer form –±”©–≥–ª”©–≤.")
            doc.add_picture(img5, width=Inches(4))

            driver.find_element(By.NAME, "AccSubmit").click()
            time.sleep(2)

            if handle_unexpected_alert(driver, doc):
                print("Alert –≥–∞—Ä–∞–∞–¥ —Ö–∞–∞–≥–¥–ª–∞–∞, Fund Transfer “Ø—Ä –¥“Ø–Ω–≥–∏–π–Ω –∑—É—Ä–∞–≥ –∞–≤–∞—Ö–≥“Ø–π.")
            else:
                img6 = os.path.join(img_folder, "06_fund_transfer_result.png")
                driver.save_screenshot(img6)
                doc.add_paragraph("7. Fund Transfer “Ø—Ä –¥“Ø–Ω–≥–∏–π–Ω screenshot.")
                doc.add_picture(img6, width=Inches(4))
        else:
            print("Fund Transfer —Ü—ç—Å —Ä“Ø“Ø –æ—Ä–æ—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.")
    except Exception as e:
        print("‚ö†Ô∏è Fund Transfer —Ö—ç—Å—ç–≥—Ç –∞–ª–¥–∞–∞:", e)
        doc.add_paragraph(f"‚ö†Ô∏è Fund Transfer —Ö—ç—Å—ç–≥—Ç –∞–ª–¥–∞–∞: {str(e)}")

    # --- Mini Statement ---
    print("Mini Statement —Ä“Ø“Ø –æ—Ä–∂ –±–∞–π–Ω–∞...")
    if safe_click_by_link_text(driver, "Mini Statement"):
        time.sleep(1)
        driver.find_element(By.NAME, "accountno").send_keys("3308")
        driver.find_element(By.NAME, "AccSubmit").click()
        time.sleep(1)
        add_screenshot(doc, driver, img_folder, "07_mini_statement.png", "8. Mini Statement —Ö–∞—Ä–∞–≥–¥—Å–∞–Ω –±–∞–π–¥–∞–ª.")
    else:
        print("Mini Statement —Ü—ç—Å —Ä“Ø“Ø –æ—Ä–æ—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.")

    # --- Logout ---
    print("Log out —Ö–∏–π–∂ –±–∞–π–Ω–∞...")
    if safe_click_by_link_text(driver, "Log out"):
        time.sleep(1)
        add_screenshot(doc, driver, img_folder, "08_logout.png", "9. –ê–º–∂–∏–ª—Ç—Ç–∞–π Log out —Ö–∏–π–≤.")
    else:
        print("Log out —Ö–∏–π—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.")

    driver.quit()
    doc.add_paragraph("10. –¢–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–ª–∞–∞.")

    word_path = os.path.join(base_folder, "test_report.docx")
    doc.save(word_path)

    print(f"‚úÖ –ë“Ø—Ö screenshot –±–æ–ª–æ–Ω —Ç–∞–π–ª–∞–Ω: {base_folder}")
    print(f"üìÑ Word —Ñ–∞–π–ª: {word_path}")
    print("–¢–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π –≥“Ø–π—Ü—ç—Ç–≥—ç–ª—ç—ç.")
    print("–ë–∞—è—Ä–ª–∞–ª–∞–∞!")
    print("–°–∞–π–Ω —Å–∞–π—Ö–∞–Ω ”©–¥”©—Ä!")